# Ce profil permet d'initialiser une BD Postgres a partir des annotations JPA
# et du fichier data-postgresql.sql

# Pour demarrer avec ce profil, executer la commande suivante :
# mvn spring-boot:run -Dspring-boot.run.profiles=create

# Pour generer du SQL optimise pour Postgres
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# L'URL de la source de donnees : SGBD postgres sur koyeb
# La base de donnees doit etre creee (vide) au prealable sur le serveur Postgres
# Attention ! On ne met JAMAIS des informations sensibles (mots de passe...) dans le code source !
# spring.datasource.url=jdbc:postgresql://ep-royal-mouse-27957554.eu-central-1.pg.koyeb.app/country?user=koyeb-adm&password=i5NBLg1prHd
# On utilise plut√¥t une variable d'environnement 
spring.datasource.url=${JDBC_URI}

# Comment hibernate doit recreer le schema de la BD
# Hibernate ddl auto (create, create-drop, update, none): with "create" the database
# schema will be automatically created afresh for every start of application
# On recree automatiquement le schema relationnel a partir des annotations JPA
spring.jpa.hibernate.ddl-auto=create
spring.sql.init.mode=always

# Ou se trouve le fichier de donnees initiales
# Le code SQL necessaire peut varier en fonction du SGBD choisi.
spring.sql.init.data-locations=classpath:data-postgresql.sql

# On initialise la BD (data-postgres.sql) APRES la creation du schema relationnel
spring.jpa.defer-datasource-initialization=true
